// 所有子项目的通用配置
subprojects { 
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    version = '1.0'  

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8  

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
    
    //定义版本号
    ext {  
        springVersion = '3.2.11.RELEASE'  
        hibernateVersion='4.3.1.Final'  
    } 
	
	//设置jar仓库
    repositories {
		mavenLocal()
		maven { url 'http://git.huatugz.com:8081/nexus/content/groups/public' }
		maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    configurations {
        // 所有需要忽略的包定义在此
        all*.exclude group: 'commons-httpclient'
        all*.exclude group: 'commons-logging'
        all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }

    dependencies {
        // 通用依赖
        compile(  
                "org.springframework:spring-context:$springVersion",  
                "org.springframework:spring-orm:$springVersion",  
                "org.springframework:spring-tx:$springVersion",  
                "org.springframework.data:spring-data-jpa:1.5.2.RELEASE",  
                "org.hibernate:hibernate-entitymanager:$hibernateVersion",  
                "c3p0:c3p0:0.9.1.2",  
                "mysql:mysql-connector-java:5.1.26",  
                "org.slf4j:slf4j-nop:1.7.6",  
                "commons-fileupload:commons-fileupload:1.3.1",  
                "com.fasterxml.jackson.core:jackson-databind:2.3.1"  
        )

        // 依赖maven中不存在的jar
        ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
        ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
        ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')

        compile jarTree

        // 测试依赖
        testCompile(  
                "org.springframework:spring-test:$springVersion",  
                "junit:junit:4.11"  
        ) 
    }
	// 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }
}